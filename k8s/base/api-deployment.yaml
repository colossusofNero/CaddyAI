apiVersion: apps/v1
kind: Deployment
metadata:
  name: caddyai-api
  labels:
    app: caddyai-api
    component: backend
    app.kubernetes.io/name: caddyai
    app.kubernetes.io/component: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: caddyai-api
  template:
    metadata:
      labels:
        app: caddyai-api
        component: backend
        version: v1
    spec:
      serviceAccountName: caddyai-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 2000
      containers:
      - name: caddyai-api
        image: caddyai:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: caddyai-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: caddyai-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: caddyai-secrets
              key: jwt-secret
        - name: AWS_REGION
          value: "us-east-1"
        - name: VOICE_SERVICE_URL
          value: "http://caddyai-voice:8000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - caddyai-api
              topologyKey: kubernetes.io/hostname