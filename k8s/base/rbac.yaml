apiVersion: v1
kind: ServiceAccount
metadata:
  name: caddyai-service-account
  labels:
    app.kubernetes.io/name: caddyai
    app.kubernetes.io/component: service-account
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: caddyai-cluster-role
  labels:
    app.kubernetes.io/name: caddyai
    app.kubernetes.io/component: cluster-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: caddyai-cluster-role-binding
  labels:
    app.kubernetes.io/name: caddyai
    app.kubernetes.io/component: cluster-role-binding
subjects:
- kind: ServiceAccount
  name: caddyai-service-account
  namespace: caddyai
- kind: ServiceAccount
  name: caddyai-service-account
  namespace: caddyai-dev
- kind: ServiceAccount
  name: caddyai-service-account
  namespace: caddyai-staging
- kind: ServiceAccount
  name: caddyai-service-account
  namespace: caddyai-prod
roleRef:
  kind: ClusterRole
  name: caddyai-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: caddyai-role
  labels:
    app.kubernetes.io/name: caddyai
    app.kubernetes.io/component: role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: caddyai-role-binding
  labels:
    app.kubernetes.io/name: caddyai
    app.kubernetes.io/component: role-binding
subjects:
- kind: ServiceAccount
  name: caddyai-service-account
roleRef:
  kind: Role
  name: caddyai-role
  apiGroup: rbac.authorization.k8s.io